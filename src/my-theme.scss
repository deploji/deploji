@import '~@angular/material/theming';
// Plus imports for other components in your app.

// Include the common styles for Angular Material. We include this here so that you only
// have to load a single css file for Angular Material in your app.
// Be sure that you only ever include this mixin once!
@include mat-core();


$mat-living-colar: (
        50 : #ffeeec,
        100 : #ffd4d0,
        200 : #ffb7b0,
        300 : #ff9a90,
        400 : #ff8579,
        500 : #ff6f61,
        600 : #ff6759,
        700 : #ff5c4f,
        800 : #ff5245,
        900 : #ff4033,
        A100 : #ffffff,
        A200 : #ffffff,
        A400 : #ffe0de,
        A700 : #ffc8c4,
        contrast: (
                50 : #000000,
                100 : #ffffff,
                200 : #ffffff,
                300 : #ffffff,
                400 : #ffffff,
                500 : #ffffff,
                600 : #ffffff,
                700 : #ffffff,
                800 : #ffffff,
                900 : #ffffff,
                A100 : #000000,
                A200 : #000000,
                A400 : #ffffff,
                A700 : #ffffff,
        )
);


// Define the palettes for your theme using the Material Design palettes available in palette.scss
// (imported above). For each palette, you can optionally specify a default, lighter, and darker
// hue. Available color palettes: https://material.io/design/color/
$candy-app-primary: mat-palette($mat-living-colar);
$candy-app-accent: mat-palette($mat-pink);

// The warn palette is optional (defaults to red).
$candy-app-warn: mat-palette($mat-red);

// Create the theme object (a Sass map containing all of the palettes).
$candy-app-theme: mat-light-theme($candy-app-primary, $candy-app-accent, $candy-app-warn);

// Include theme styles for core and each component used in your app.
// Alternatively, you can import and @include the theme mixins for each component
// that you are using.
@include angular-material-theme($candy-app-theme);
